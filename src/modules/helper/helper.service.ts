import { Injectable } from '@nestjs/common';
import * as randomNumber from 'random-number-csprng-2';
import {
  GameAvailableOptions,
  losersMap,
  Participants,
} from '../../constants/common';

@Injectable()
export class HelperService {
  /**
   * Generates random number and returns appropriate key from GameAvailableOptions enum
   */
  public async generateOption(): Promise<GameAvailableOptions> {
    // Generate random number in range of keys in GameAvailableOptions
    const randomNumberInRange = await randomNumber(
      0,
      Object.keys(GameAvailableOptions).length - 1,
    );
    // Return random key from available options
    return Object.keys(GameAvailableOptions)[`${randomNumberInRange}`];
  }

  /**
   * Define and return winner of round
   * @param userChoice - Choice of the user
   * @param generatedOption - Options generated by server
   */
  public defineWinner(userChoice, generatedOption): Participants | null {
    if (userChoice === generatedOption) return null;
    // If generated options in users choice looser options array then user win.
    const userIsWinner = losersMap[userChoice].includes(generatedOption);
    return userIsWinner ? Participants.user : Participants.opponent;
  }
}
